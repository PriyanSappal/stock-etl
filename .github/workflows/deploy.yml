name: CD

on:
  push:
    branches:
      - main   # runs only when code is pushed to main

jobs:
  deploy-infra:
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # needed for OIDC
      contents: read    # to checkout code
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: Create tfvars file
        run: |
          cat <<EOF > infra/secrets.auto.tfvars
          aws_region  = "${{ secrets.AWS_REGION }}"
          bucket_name = "${{ secrets.BUCKET_NAME }}"
          db_name     = "${{ secrets.DB_NAME }}"
          db_username = "${{ secrets.DB_USERNAME }}"
          db_password = "${{ secrets.DB_PASSWORD }}"
          api_provider = "${{ secrets.API_PROVIDER }}"
          symbol      = "${{ secrets.SYMBOL }}"
          api_key     = "${{ secrets.API_KEY }}"
          grafana_user = "${{ secrets.GRAFANA_USER }}"
          grafana_pass = "${{ secrets.GRAFANA_PASS }}"
          environment = "dev"
          allowed_cidr = "0.0.0.0/0"
          EOF

      - name: Terraform Init
        run: terraform init
        working-directory: infra

      - name: Terraform Format Check
        run: terraform fmt -recursive
        working-directory: infra

      - name: Terraform Validate
        run: terraform validate
        working-directory: infra

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: infra

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: infra
